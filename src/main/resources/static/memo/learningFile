JPA
영속성 컨텍스트
1차 캐시에(영속화 되었다라고 표현한다) 저장 후 디비에 저장된다.(flush)

phantom read - db 값이 보였다 안보였다 할때

repeatable read - 부정합이 발생하지 않는다. / 자기 트렌젝션 번호 보다 낮은 undo 로그를 보고 select를 진행

정합성을 위해 SELECT 시에도 @transactional 어노테이션을 붙혀준다.

로직
1. request 시 컨트롤러가 요청을 받고 영속성컨텍스트 시작, 요청을 분기시켜 그에 맞는 서비스를 호출시킨다.
2. 이때 JDBC 커넥션 및 트렌젝션이 시작된다.
3. JPA는 영속성 컨텍스트에 맞는 데이터 값을 저장
4. 필요 서비스를 실행, 컨트롤러로 돌아오고 직전에 트렌젝션 및 디비 연결 세션이 종료 됌.
5. 컨트롤러가 리스폰스 하기 직전 트렌젝션이 종료되었기 때문에 변경을 감지하게 된다.
6. 영속화된 객채의 데이터가 변경되었기 때문에  데이터베이스에 flush 시킨다.
7. 프로그램이 종료되고 서비스가 정상적으로 수행된다.

fetch = FetchType.LAZY = 지연로딩 / 프록시 객체를 1차 캐시에 저장(empty) 
-영속성 컨텍스트를 서비스 종료시 끊지않고 컨트롤러 영역까지 지속시킨다. open in view 를 true로 설정해놔야 한다.
-false 일시 서비스 종료시 끊어진다.
